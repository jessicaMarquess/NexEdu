name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Job para executar testes e linting
  test:
    name: Tests and Linting
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: nexedu_test
          POSTGRES_PASSWORD: test123
          POSTGRES_DB: nexedu_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run tests
        env:
          DATABASE_URL: postgresql://nexedu_test:test123@localhost:5432/nexedu_test
          NODE_ENV: test
        run: |
          npx prisma migrate deploy
          npm test

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: nexedu-build-${{ github.sha }}
          path: |
            dist/
            package.json
            prisma/
          retention-days: 30

  # Job para build local da imagem Docker (sem push)
  docker-build:
    name: Test Docker Build
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (local only)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: nexedu-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm -d --name nexedu-test -p 3000:3000 nexedu-api:latest
          sleep 10
          curl -f http://localhost:3000 || exit 1
          docker stop nexedu-test

      - name: Comment build success
        uses: actions/github-script@v6
        with:
          script: |
            const message = `âœ… **Build Successful!**

            **Commit**: ${context.sha.substring(0, 7)}
            **Branch**: ${context.ref.replace('refs/heads/', '')}

            - âœ… Tests passed
            - âœ… TypeScript compiled
            - âœ… Docker image built successfully
            - âœ… Application starts correctly

            **Ready for deployment!** ðŸš€`;

            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: message
            });
