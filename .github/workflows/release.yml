name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Create Release Notes
        id: release_notes
        run: |
          # Extrair versÃ£o da tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Gerar changelog desde a Ãºltima tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")

          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log $PREVIOUS_TAG..HEAD --oneline --pretty=format:"- %s (%h)")
          else
            CHANGELOG=$(git log --oneline --pretty=format:"- %s (%h)")
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and tag Docker image
        run: |
          VERSION=${{ steps.release_notes.outputs.version }}
          docker build -t nexedu-api:$VERSION .
          docker tag nexedu-api:$VERSION nexedu-api:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images
        run: |
          VERSION=${{ steps.release_notes.outputs.version }}
          docker push ${{ secrets.DOCKER_USERNAME }}/nexedu-api:$VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/nexedu-api:latest

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_notes.outputs.version }}
          release_name: Release ${{ steps.release_notes.outputs.version }}
          body: |
            ## ðŸš€ Release ${{ steps.release_notes.outputs.version }}

            ### What's Changed
            ${{ steps.release_notes.outputs.changelog }}

            ### Docker Images
            - `nexedu-api:${{ steps.release_notes.outputs.version }}`
            - `nexedu-api:latest`

            ### Installation
            ```bash
            docker pull ${{ secrets.DOCKER_USERNAME }}/nexedu-api:${{ steps.release_notes.outputs.version }}
            ```
          draft: false
          prerelease: false

      - name: Notify release
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: "ðŸŽ‰ NexEdu API ${{ steps.release_notes.outputs.version }} has been released!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
